import sys
import aplpy
import os
import numpy as np
import matplotlib.pyplot as plt
from astropy.io import fits
from matplotlib import rc
rc('text', usetex=True)
font = {'weight' : 'normal','size':20,'family':'sans-serif','sans-serif':['Helvetica']}
rc('font', **font)

mom0 = 1
histogram = 0

hdu1 = fits.open('emap_Orion_A_bw1.0.fits')[1]
mask_hdu = fits.open('herschelAmelia/mask_emap_Orion_A_bw1.0.fits')[0]
sumak = np.nansum(hdu1.data*mask_hdu.data)
sumass = sumak*1.67e22/4.27e23*(30.*400.*1.5e13)**2/2.e33
print sumass
#sys.exit()

#xw, yw = np.loadtxt('Lane2016/GAScores.txt',usecols=(1,2),unpack=True)
xw = [209.651716,209.6031489,208.621456,209.3556737,209.3788061,209.2242087,208.9502408,208.5758953,209.9001343,209.579876,209.4628315,209.1960938,209.3956505,209.228837,209.3783262,208.5650623,209.4580536,208.5143515,209.0552386,209.366325,208.8040446,208.8358537,209.7683112,208.6963715,209.2668726,209.4988361,208.7201678,209.3226441,209.5863963,209.9716468,208.7327609,209.2091429,209.2461461,209.2927444,209.6096771,208.7745452,209.0214058,209.5904547,209.287383,209.8354504,210.0000259,208.8966689,209.5167605,208.5100338,208.5508025,208.7851213,208.9852621,209.1923294,209.2610541,209.4972384,209.7611854,209.4510189,208.8542274,209.7187374,208.778556,208.8716328,210.0060651,208.7891617,209.5306825,209.1614246,209.2512714,209.5142025,208.5689379,208.7163114,208.7865406,208.7936011,209.2908308,209.5394401,208.5626781,209.2253678,209.2181376,208.842834,209.2923395,209.1367499,209.0013962,209.2691275,208.541626,208.6010369,208.6039032,208.7625112,209.2445449,209.2592563,208.8193358,209.1843049,209.2235376,209.2789686,209.9244811,208.7899206,208.9173323,209.2267044,208.8754494,208.8821865,208.7460763,208.9100708,208.5122499,208.9167648,209.2053707,209.0517555,208.888774,208.6851097,208.8348046,209.945707,208.7008833,208.8250115,208.9116334,209.0627585,209.4863086,209.9263952,209.318017,208.8202528,208.7980739,209.9505083,209.4902371,208.8942009,208.9184877,208.8336877,208.8938588,209.7838606,208.6595677,208.7430487,208.9033085,209.4993034,208.7111296,208.5627882,208.5353871,208.8949472,208.9225254,209.4678968,208.5896798,208.6307802,208.9567021,209.2114398,209.5186401,208.5865571,208.9310692,209.2421263,208.7310458,208.5527968,208.5624739,208.54708,208.7225973,209.5337948,208.579209,208.859032,209.5079642,208.8692245,208.7449615,208.8995848,209.3275542,208.5345154,208.6753241,208.7193111,208.9048897,208.7544292,209.1857278,209.43634,208.8604251,209.0056529,208.7198462,208.722526,209.2307803,208.854782,208.7651055,209.3278311,209.4501584,208.8359278,208.7302235,208.7778622,208.7594995,208.8457424,209.1766989,209.9851204,208.6430972,208.7655322,208.8663813,208.9240086,208.7783954,209.1681677,209.818018,208.519753,208.789568,209.0627696,208.6822265,208.8152041,208.8804608,208.9007353,208.7694559,208.7575782,208.8552332,209.8671217,209.2088028,208.6273478,209.5498625,209.0021609,208.8859437,208.5667709,208.7746491,209.0714334,208.5403853,209.1925404,208.6399425,209.3283276,208.7008978,208.8303298,209.0584999,208.9485306,209.5502121,208.8543132,208.665778,208.6551185,208.8565953,208.9247739,208.7825087,208.8603922,208.7925312,208.6604184,208.946523,208.8457326,209.5083007,208.7453194,208.8252581,208.650051,208.7240203,208.6635407,208.7513437,208.9417315,208.8935413,208.6502183,208.6729739,208.8143323,208.9332072,208.9459415,208.9581126,208.9496025,208.9477754,208.8200149,208.6796287,]
yw = [-19.66012061,-19.68216449,-19.14779705,-19.6520894,-19.58007629,-19.66630215,-19.44768251,-19.19205325,-19.58984384,-19.6923286,-19.69298224,-19.46840327,-19.65165611,-19.651157,-19.6355956,-19.27268854,-19.6721495,-19.21869621,-19.47599538,-19.64505948,-19.29546044,-19.31776616,-19.61474998,-19.23667581,-19.6257096,-19.67081997,-19.18375377,-19.68034669,-19.6549731,-19.50303759,-19.18560877,-19.66714924,-19.63326121,-19.64329847,-19.61413589,-19.15308099,-19.5463112,-19.61960123,-19.61618201,-19.55370424,-19.47340063,-19.40367637,-19.55522492,-19.23602447,-19.22660317,-19.20939885,-19.47279631,-19.31601647,-19.6186606,-19.64974957,-19.62286196,-19.66153885,-19.22432527,-19.64272051,-19.17458048,-19.36295295,-19.47753004,-19.15401843,-19.62129836,-19.46079901,-19.58325732,-19.6407444,-19.22540996,-19.17704651,-19.17964867,-19.29447995,-19.63020567,-19.67339675,-19.25839817,-19.51124389,-19.54910295,-19.21616174,-19.60465087,-19.53734181,-19.45504943,-19.59269271,-19.27232633,-19.24995327,-19.215927,-19.18188733,-19.62216463,-19.5917183,-19.28792955,-19.5709544,-19.56191178,-19.65707862,-19.52060287,-19.17048851,-19.43624125,-19.51662013,-19.3175231,-19.32512122,-19.19394696,-19.34183872,-19.26915492,-19.41275421,-19.59311164,-19.46592796,-19.37238625,-19.22371168,-19.22449584,-19.51148027,-19.13439247,-19.2197142,-19.38798469,-19.57717881,-19.56604335,-19.51115468,-19.65455519,-19.27019096,-19.17098819,-19.50909998,-19.68065218,-19.33532668,-19.42521487,-19.36699911,-19.35651765,-19.65423693,-19.15593586,-19.2217095,-19.33987096,-19.55151675,-19.2297447,-19.2144155,-19.27024872,-19.39532439,-19.41890731,-19.63721221,-19.17723256,-19.22909363,-19.43207352,-19.54505323,-19.66760287,-19.25404067,-19.43506818,-19.56871284,-19.13459012,-19.26926327,-19.2074297,-19.21714663,-19.23660105,-19.65368535,-19.23067173,-19.25143416,-19.6487888,-19.30621565,-19.20214072,-19.40024869,-19.64022044,-19.20546273,-19.14045583,-19.24066583,-19.29312758,-19.21953575,-19.53061366,-19.62464136,-19.30394958,-19.44664809,-19.19730447,-19.19251232,-19.63990722,-19.37838727,-19.20211338,-19.62352365,-19.62698992,-19.29170367,-19.23251057,-19.19819821,-19.23506105,-19.25559053,-19.48367997,-19.47321131,-19.14587764,-19.19329875,-19.38793503,-19.37546424,-19.21932038,-19.51191314,-19.60172507,-19.277626,-19.23900505,-19.42302466,-19.15688415,-19.26301804,-19.29773136,-19.39058133,-19.23612449,-19.21607582,-19.27320597,-19.53608449,-19.53146301,-19.21458111,-19.67498388,-19.4340166,-19.30229339,-19.21736385,-19.23912309,-19.57810502,-19.20456761,-19.50887896,-19.20939615,-19.62961062,-19.19464966,-19.24374405,-19.4196,-19.43274051,-19.65464082,-19.27884191,-19.15682447,-19.20517415,-19.29486213,-19.35294917,-19.23699899,-19.28858462,-19.24305478,-19.20447172,-19.38649226,-19.2731711,-19.65625362,-19.21018189,-19.24934238,-19.14939517,-19.20100036,-19.19886344,-19.21562687,-19.34421075,-19.31383361,-19.20412328,-19.19488428,-19.2386984,-19.3562523,-19.34623863,-19.36172653,-19.3543682,-19.35109232,-19.24489153,-19.19314557,]
## used to convert to Galactic coord
#for i in range(len(xw)):
#    print 'circle('+str(xw[i])+','+str(yw[i])+',20")'
#import sys
#sys.exit()

center_coord = [208.9828013,-19.38037365]
pvra = [210.0376619,209.9994834,209.959144,209.9180905,209.8743271,209.8278561,209.7798803,209.7318928,209.6820689,209.6298166,209.5761269,209.5220805,209.468752,209.4147294,209.3654617,209.3151828,209.2666962,209.224061,209.1886013,209.1463642,209.1114179,209.0702914,209.028316,208.9828013,208.9471828,208.9105027,208.8690956,208.8273368,208.7807128,208.7279427,208.6758266,208.6231643,208.5788157,208.5292434,208.4902041,208.4511481,208.41117,208.3841147,]
pvdec = [-19.43557226,-19.46945193,-19.50006733,-19.53082326,-19.55818151,-19.58213858,-19.60184492,-19.62153869,-19.63685705,-19.64802493,-19.6516595,-19.65254459,-19.65546531,-19.64948692,-19.63462842,-19.620985,-19.59790469,-19.56732221,-19.53072566,-19.49944348,-19.46306417,-19.43313604,-19.40278528,-19.38037365,-19.34532481,-19.308896,-19.27789518,-19.24756563,-19.22471018,-19.21819371,-19.22054822,-19.22305438,-19.25053741,-19.26995,-19.30344364,-19.3369288,-19.37039749,-19.41316226,]
pvline = np.array([pvra,pvdec])
distan = [((center_coord[0]-i)**2+(center_coord[1]-pvdec[n])**2)**0.5 for n,i in enumerate(pvra)]
refind = np.argmin(distan)

if mom0 == 1:
    xcenter = 209.2270393
    ycenter = -19.47235506
    wid = 1.65
    hei = 0.8625000
    xpanels = 1
    ypanels = 1
    fig=plt.figure(figsize=(3*xpanels*(wid/(wid+hei))*10.,3*ypanels*(hei/(wid+hei))*10.))
    ff = aplpy.FITSFigure(hdu1, figure=fig)
    ff.recenter(xcenter,ycenter,width=wid,height=hei) 
    ff.set_theme('publication')
    #ff.set_system_latex(True)
    maxcolor = np.nanmax(hdu1.data)
    #maxcolor = 100
    #ff.show_colorscale(cmap='gist_heat', vmin=mincolor, vmax=maxcolor, stretch='log')
    ff.show_colorscale(cmap='gray_r', vmin=0, vmax=8, stretch='sqrt')
    #ff.show_regions('herschelAmelia/northsouthfils.reg')
    ff.show_regions('herschelAmelia/olay1.reg')
    #ff.show_regions('OrionKLellipse.reg')
    ff.show_contour(mask_hdu, levels=1, colors='green', linewidths=2, linestyles='dashed', zorder=5)
    ff.show_circles(xw,yw,radius=20./3600.,edgecolor='blue')
    ff.add_colorbar() 
    ff.axis_labels.set_xtext(r'$\rm Galactic~Longitude$')
    ff.axis_labels.set_ytext(r'$\rm Galactic~Latitude$')
    #ff.colorbar.set_pad(0.5)
    ff.colorbar.set_axis_label_text(r'$\rm A_K~(mag)$')
    ff.tick_labels.set_xformat('dd.d')
    ff.tick_labels.set_yformat('dd.d')
    ff.add_scalebar(0.286,corner='bottom right')#,pad=10) # degree for 2pc at 400 pc
    ff.scalebar.set_label('2 pc')
    #beamx = 83.41442439
    #beamy = -7.022846568
    #bmaj = hdu1.header['BMAJ']
    #bmin = hdu1.header['BMIN']
    #beamangle = hdu1.header['BPA']
    #ff.show_ellipses(beamx,beamy,bmaj,bmin,angle=beamangle-90,facecolor='black',edgecolor='black')
    #ff.add_label(beamx+1.0,beamy+2.0,'0th-moment C$^{18}$O(1-0)',size=12,weight='bold')
    ff.show_lines([pvline],color='orange')
    ff.show_markers(pvra,pvdec,facecolor='red',edgecolor='none',s=50,zorder=2)
    ff.show_markers(pvra[refind],pvdec[refind],facecolor='red',edgecolor='none',s=200,zorder=3)
    ff.add_label(pvra[refind],pvdec[refind]-0.03,'0',color='red',size=20)
    ff.add_label(pvra[refind+7],pvdec[refind+7]-0.03,'21',color='red',size=20)
    ff.add_label(pvra[refind+14],pvdec[refind+14]-0.03,'42',color='red',size=20)
    ff.add_label(pvra[refind-7],pvdec[refind-7]+0.03,'-21',color='red',size=20)
    ff.add_label(pvra[refind-14],pvdec[refind-14]+0.03,'-42',color='red',size=20)
    ff.add_label(pvra[refind-21],pvdec[refind-21]+0.03,'-63',color='red',size=20)
    pdfname = 'filregions.pdf'
    os.system('rm '+pdfname)
    plt.savefig(pdfname,bbox_inches='tight')
    os.system('open '+pdfname)
    os.system('cp '+pdfname+os.path.expandvars(' /Users/shuokong/GoogleDrive/imagesSFE'))

if histogram == 1:
    from matplotlib import rc
    rc('text', usetex=True)
    font = {'weight':'normal','size':12,'family':'sans-serif','sans-serif':['Helvetica']}
    rc('font', **font)
    
    print hdu1.data.shape
    #sys.exit()
    x = hdu1.data[~np.isnan(hdu1.data)]
    p=plt.figure(figsize=(7,6))
    fig, ax = plt.subplots(1,1)
    # the histogram of the data
    n, bins, patches = plt.hist(x, 100, normed=True, histtype='step', color='k')
    #print n,bins
    
    plt.xlabel(r'$I_{\rm ^{12}CO}~\rm K~km~s^{-1}$')
    plt.ylabel('probability density')
    #plt.xlim(0,20)
    ax.xaxis.set_tick_params(top='on',labeltop='on',direction='in')
    ax.yaxis.set_tick_params(direction='in')
    #plt.grid(True)
    pdfname = 'mom0_c18o_hist.pdf'
    os.system('rm '+pdfname)
    plt.savefig(pdfname,bbox_inches='tight')
    os.system('open '+pdfname)
    os.system('cp '+pdfname+os.path.expandvars(' /Users/shuokong/GoogleDrive/imagesCARMAOrion/'))

